(env
 (dev
  (flags
   (:standard -warn-error -A))))

(library
 (name libSerialize)
 (package Lama-Sirius)
 (flags
  (:standard -rectypes))
 (modules libSerialize)
 (inline_tests)
 (preprocess
  (pps ppx_inline_test))
 (libraries yojson liba))

(executable
 (name runQCsm)
 ;(package Lama-Sirius)
 (modules runQCsm)
 (flags
  (:standard -rectypes))
 (libraries libSerialize qcheck-core qcheck-core.runner))

(executable
 (name json_bytecode)
 (package Lama-Sirius)
 (public_name json_bytecode)
 (flags
  (:standard -rectypes))
 (modules json_bytecode)
 (libraries libSerialize opium yojson liba)
 (preprocess
  (pps GT.ppx_all)))

(executable
 (name lama_bc_json)
 (package Lama-Sirius)
 (public_name lama_bc_json)
 (flags
  (:standard -rectypes))
 (modules lama_bc_json)
 (libraries libSerialize yojson liba))

(cram
 (deps ./json_bytecode.exe))

(install
 (section share)
 (source_trees tasks)
 (package Lama-Sirius))

(rule
 (target 1write.bc.json)
 (deps
  (:dep tasks/1expr/1write.bc.json))
 (action
  (run cp %{dep} %{target})))

(rule
 (target 1write.lama)
 (deps
  (:dep tasks/1expr/1write.lama))
 (action
  (run cp %{dep} %{target})))

(rule
 (target 1append.lama)
 (deps
  (:dep tasks/4other/1append.lama))
 (action
  (run cp %{dep} %{target})))

(rule
 (target 1append.bc.json)
 (deps
  (:dep tasks/4other/1append.bc.json))
 (action
  (run cp %{dep} %{target})))

(rule
 (target test050.lama)
 (deps
  (:dep tasks/4other/test050.lama))
 (action
  (run cp %{dep} %{target})))

(rule
 (target test050.bc.json)
 (deps
  (:dep tasks/4other/test050.bc.json))
 (action
  (run cp %{dep} %{target})))

(rule
 (target 081zip.lama)
 (deps
  (:dep tasks/4other/test081.lama))
 (action
  (run cp %{dep} %{target})))

(rule
 (target 081zip.bc.json)
 (deps
  (:dep tasks/4other/081zip.bc.json))
 (action
  (run cp %{dep} %{target})))

(rule
 (target Std.i)
 (deps
  (:dep %{project_root}/runtime/Std.i))
 (action
  (run cp %{dep} %{target})))

(executable
 (name client)
 (flags
  (:standard -rectypes))
 (modules client)
 (modes js)
 (preprocessor_deps
  (file "1write.lama")
  (file "1write.bc.json")
  (file "1append.lama")
  (file "1append.bc.json")
  (file "test050.lama")
  (file "test050.bc.json")
  (file "081zip.lama")
  (file "081zip.bc.json")
  (file "index.html")
  (file "styles.css")
  (file "Std.i")
  ;
  )
 (preprocess
  (pps
   ppx_blob
   js_of_ocaml-ppx
   ;
   ))
 (libraries libSerialize yojson liba js_of_ocaml))

(executable
 (name lama_on_node)
 (flags
  (:standard -rectypes))
 (modules lama_on_node)
 (modes js)
 (js_of_ocaml
  (flags
   --pretty
   --no-inline
   --debug-info
   --disable
   deadcode
   --target-env
   node))
 (preprocessor_deps
  (file "1write.bc.json")
  (file "1append.bc.json")
  (file "index.html")
  (file "test050.bc.json")
  (file "styles.css")
  (file "Std.i")
  ;
  )
 (preprocess
  (pps
   ppx_blob
   js_of_ocaml-ppx
   ;
   ))
 (libraries libSerialize yojson liba js_of_ocaml))

(executable
 (name node_shallow)
 (flags
  (:standard -rectypes))
 (modules node_shallow)
 (modes js exe)
 (js_of_ocaml
  (flags
   --pretty
   --no-inline
   --debug-info
   --disable
   deadcode
   --target-env
   node))
 (preprocessor_deps
  (file "1write.bc.json")
  (file "1append.bc.json")
  (file "index.html")
  (file "test050.bc.json")
  (file "styles.css")
  (file "Std.i")
  ;
  )
 (preprocess
  (action
   (run %{project_root}/src/pp5+gt+plugins+ostap+dump.byte %{input-file})))
 (libraries ostap))

(cram
 (applies_to testJS)
 (deps ./lama_on_node.bc.js))

(cram
 (applies_to node_shallow)
 (deps ./node_shallow.bc.js))
